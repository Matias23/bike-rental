buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(
                'org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE',
        )
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'idea'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'pmd'
apply plugin: 'jacoco'

pmd {
    toolVersion = '4.3'
    ruleSets = [
            "basic",
            "braces",
            "naming",
            "android",
            "clone",
            "codesize",
            "controversial",
            "design",
            "finalizers",
            "imports",
            "j2ee",
            "javabeans",
            "junit",
            "logging-jakarta-commons",
            "logging-java",
            "migrating",
            "optimizations",
            "strictexception",
            "strings",
            "sunsecure",
            "typeresolution",
            "unusedcode"
    ]
}

group 'com.intive'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile project(':rental-contract')
    compile 'org.projectlombok:lombok:1.18.8'
    compile group: 'org.springframework', name: 'spring-web', version: '5.1.5.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '5.1.5.RELEASE'
    compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.15'
    compile 'org.springframework.boot:spring-boot-starter:2.1.4.RELEASE'
    compile("org.springframework.boot:spring-boot-starter-web")
    compile 'org.modelmapper:modelmapper:2.1.0'
    compile('org.springframework.boot:spring-boot-starter-data-mongodb:2.1.4.RELEASE')
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'
    compile 'org.apache.kafka:kafka-clients:0.9.0.0'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    testCompile('org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE')
}

check.dependsOn jacocoTestCoverageVerification
test.finalizedBy jacocoTestReport

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
        }
        rule {
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
        }
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
        }
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
        }
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, excludes: [
                    '**/config/*',
                    '**/*Entity.class',
                    '**/*Application.class',
                    '**/domain/*',
                    '**/com.intive.rental.dto/*'
            ])
        }))
    }
}